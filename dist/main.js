(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var c=n.getElementsByTagName("script");if(c.length)for(var r=c.length-1;r>-1&&!t;)t=c[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=(()=>{const e={};return{subscribe:function(t,n){e[t]||(e[t]=[]),e[t].push(n)},publish:function(t,n){e[t]&&e[t].forEach((e=>{e(n)}))},unsubscribe:function(t,n){if(e[t])for(let c=0;c<e[t].length;c+=1)if(e[t][c]===n)return e[t].splice(c,1),!0;return!1}}})();(()=>{let e=Array.from({length:3},(()=>new Array(3).fill(".")));t.subscribe("restartGame",(function(){for(let t=0;t<3;t+=1)for(let n=0;n<3;n+=1)e[t][n]="."})),t.subscribe("gridPickedBeforeEnd",(function([n,c]){"."===e[n][c]?t.publish("gridPickedAccepted",[n,c]):t.publish("gridPickedRejected",[n,c])})),t.subscribe("updateGridPicked",(function([n,c,r]){const i=function(e,t,n,c){if(t<0||t>=3||n<0||n>=3)return!1;if("."!==e[t][n])return!1;const r=new Array(3);for(let t=0;t<3;t+=1)r[t]=e[t].slice();return r[t][n]=c,r}(e,n,c,r);e=i,function(){const n=function(e){for(let n=0;n<3;n+=1){const c=e[n][0];if("."!==c)for(let r=1;r<3&&e[n][r]===c;r+=1)if(2===r)return t.publish("winnerDecided",c),c;const r=e[0][n];if("."!==r)for(let c=1;c<3&&e[c][n]===r;c+=1)if(2===c)return t.publish("winnerDecided",r),r}if("."!==e[0][0])for(let n=1;n<3&&e[n][n]===e[0][0];n+=1)if(2===n)return t.publish("winnerDecided",e[0][0]),e[0][0];if("."!==e[0][2])for(let n=1;n<3&&e[n][2-n]===e[0][2];n+=1)if(2===n)return t.publish("winnerDecided",e[0][2]),e[0][2];return!1}(e);!1!==n?t.publish("gameEnded",n):function(e){for(let t=0;t<3;t+=1)for(let n=0;n<3;n+=1)if("."===e[t][n])return!1;return!0}(e)&&t.publish("gameEnded","draw")}()}))})(),(()=>{let e=!0,n=!1;t.subscribe("restartGame",(function(){e||t.publish("turnChanged",null),e=!0,n=!1})),t.subscribe("gridPicked",(function([e,c]){n||t.publish("gridPickedBeforeEnd",[e,c])})),t.subscribe("gridPickedAccepted",(function([n,c]){const r=e?"x":"o";t.publish("updateGridPicked",[n,c,r])})),t.subscribe("updateGridPicked",(function(){e=!e,t.publish("turnChanged",null)})),t.subscribe("gameEnded",(function(){n=!0}))})();const n=e.p+"96d43856a7f63bb75055.png",c=e.p+"89fcdb057fecbfe7b7f3.png";(()=>{function e(e){document.getElementById(e).classList.toggle("active")}function r(e){const{target:t}=e,n=t.parentNode.parentNode;if(n.classList.remove("active"),"result-form"===n.id){const e=document.getElementById("res-img-wrapper");for(;e.firstChild;)e.removeChild(e.lastChild)}}document.getElementById("restart-btn").onclick=()=>{t.publish("restartGame",null),t.publish("popClicked",null)},document.getElementById("play-again-btn").onclick=n=>{e("overlay"),r(n),t.publish("restartGame",null)},document.getElementById("mode-btn").onclick=()=>{e("overlay"),e("mode-form"),t.publish("popClicked",null)};const i=document.getElementById("mute-btn"),o=document.querySelector("#mute-btn>ion-icon");i.onclick=()=>{i.classList.contains("muted")?(o.name="volume-mute-outline",i.classList.remove("muted"),t.publish("playJudgeTree",null)):(o.name="musical-notes-outline",i.classList.add("muted"),t.publish("stopJudgeTree",null))},document.getElementById("info-btn").onclick=()=>{e("overlay"),e("info-form"),t.publish("popClicked",null)},document.querySelectorAll(".form-wrapper>span.icon-close").forEach((t=>{t.onclick=t=>{e("overlay"),r(t)}})),document.querySelectorAll(".cell").forEach((e=>{const n=e;n.onclick=()=>{const e=n.getAttribute("data-r"),c=n.getAttribute("data-c");t.publish("gridPicked",[e,c])}})),t.subscribe("restartGame",(function(){document.querySelectorAll(".cell > img").forEach((e=>{e.parentNode.removeChild(e)}))})),t.subscribe("updateGridPicked",(function([e,t,r]){const i="x"===r?n:c,o=document.createElement("img");o.src=i,document.querySelector(`.cell[data-r="${e}"][data-c="${t}"]`).appendChild(o)})),t.subscribe("gridPickedRejected",(function([e,t]){const n=document.querySelector(`.cell[data-r="${e}"][data-c="${t}"]`);n.classList.add("shake"),function(e,t){let c;return function(...e){clearTimeout(c),c=setTimeout((()=>{(()=>{n.classList.remove("shake")})(...e)}),1e3)}}()()})),t.subscribe("gameEnded",(function(t){const r=document.getElementById("res-img-wrapper"),i=document.getElementById("result-text");if("draw"===t){const e=document.createElement("img"),t=document.createElement("img");e.src=n,t.src=c,r.appendChild(e),r.appendChild(t),i.textContent="DRAW!"}else{const e="x"===t?n:c,o=document.createElement("img");o.src=e,r.appendChild(o),i.textContent="WINNER!"}e("result-form"),e("overlay")}))})(),(()=>{const e=document.querySelector("body"),r=document.createElement("div");function i(){return window.innerWidth/window.innerHeight}function o(e,t){const n=document.createElement("img");return n.src=e,t.forEach((e=>{n.classList.add(e)})),n}function s(e,t,n,c,i){const s=100/n,u=100/c;for(let l=0;l<n;l+=1)for(let n=0;n<c;n+=1){const c=o(e,t);c.style.width=i,c.style.position="absolute",c.style.top=s*l+"%",c.style.left=u*(n+(l%2?.5:0))+"%",r.appendChild(c)}}function u(e,t,n,c,r,i,o){s(e,[...t,"active"],r,i,o),s(n,c,r,i,o)}r.classList.add("background-wrapper"),i()>3/4?u(n,["xImg","active"],c,["oImg"],4,7,"10%"):u(n,["xImg","active"],c,["oImg"],10,4,"20%"),window.addEventListener("resize",(()=>{const e=document.querySelector(".background-wrapper img.xImg").classList.contains("active");!function(){for(;r.lastChild;)r.removeChild(r.firstChild)}(),i()>3/4?e?u(n,["xImg","active"],c,["oImg"],4,7,"10%"):u(c,["oImg","active"],n,["xImg"],4,7,"10%"):e?u(n,["xImg","active"],c,["oImg"],10,4,"20%"):u(c,["oImg","active"],n,["xImg"],10,4,"20%")})),e.appendChild(r),t.subscribe("turnChanged",(function(){const e=document.querySelectorAll(".background-wrapper img.active"),t=document.querySelectorAll(".background-wrapper img:not(.active)");e.forEach((e=>{e.classList.remove("active")})),t.forEach((e=>{e.classList.add("active")}))}))})();const r=e.p+"5fdf4dcbcd5a1c52dacd.wav",i=e.p+"dff640501756d96e994b.wav",o=e.p+"6e58a952e7687ad39b98.wav",s=e.p+"058d32c89d5893f4ade7.mp3";(()=>{const e=document.getElementById("mute-btn");function n(e,t){const n=document.createElement("audio");return n.src=e,n.id=t,n}function c(t){if(e.classList.contains("muted"))return;const n=t;n.currentTime=0,n.play()}const u=n(r,"grass"),l=n(i,"error"),d=n(o,"pop"),a=n(s,"judgeTree");a.volume=.4,a.loop=!0,t.subscribe("updateGridPicked",(()=>c(u))),t.subscribe("gridPickedRejected",(()=>c(l))),t.subscribe("popClicked",(()=>c(d))),t.subscribe("playJudgeTree",(()=>{c(a)})),t.subscribe("stopJudgeTree",(()=>function(e){const t=e;t.pause(),t.currentTime=0}(a)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,